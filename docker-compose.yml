version: '2'
services:

  elasticsearch:
    build: elasticsearch/
    image: elasticsearch:latest
    ports:
      - "9200:9200/tcp"
      - "9300:9300/tcp"
    labels:
      io.rancher.container.hostname_override: container_name
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    stdin_open: true
    restart: always

  logstash:
    build: logstash/
    image: logstash:latest
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044:5044/tcp"
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    labels:
      io.rancher.container.hostname_override: container_name
    command:
      - -f
      - /etc/logstash/conf.d/
    stdin_open: true
    restart: always

  kibana:
    image: kibana:5
    ports:
      - "5601:5601/tcp"
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    command:
      - -e http://elasticsearch:9200
    labels:
      io.rancher.container.hostname_override: container_name
    stdin_open: true
    restart: always

#  metricbeat:
#    build: metricbeat/
#    image: metricbeat:latest
#    #network_mode: host
#    links:
#      - logstash:logstash
#    depends_on:
#      - logstash
#    volumes:
#      - /proc:/hostfs/proc:ro
#      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
#      - /:/hostfs:ro
#    command:
#      - -e
#      - -E=output.logstash.hosts=logstash:5044
#      - -system.hostfs=/hostfs
#    labels:
#      io.rancher.container.hostname_override: container_name
#      io.rancher.container.dns: 'true'
#    stdin_open: true
#    restart: always



  packetbeat:
    build: packetbeat/
    image: packetbeat:latest
    network_mode: host
    depends_on:
      - logstash
    command:
      - -e
      - -E=output.logstash.hosts=logstash:5044
    labels:
      io.rancher.container.hostname_override: container_name
      io.rancher.container.dns: 'true'
    stdin_open: true
    restart: always


#  dockbeat:
#    image: ingensi/dockbeat:latest
#    environment:
#      PERIOD: 5
#    links:
#      - elasticsearch
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    restart: always